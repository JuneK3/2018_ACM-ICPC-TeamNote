pii operator-(const pii& a, const pii& b) {
	pii p;
	p.x = a.x - b.x, p.y = a.y - b.y;
	return p;
}
bool operator>(const pii& a, const pii& b) {
	if (a.x != b.x) return a.x > b.x;
	else return a.y > b,y;
}
bool operator<=(const pii& a, const pii& b) {
	if (a.x != b.x) return a.x <= b.x;
	else return a.y <= b,y;
}
op(pii p1, pii p2) {
	return p1.x*p2.y - p1.y*p2.x;
}
ccw(pii p1, pii p2, pii p3) {
	ll op = p1.x*p2.y + p2.x*p3.y + p3.x*p1.y;
	op -= p1.y*p2.x + p2.y*p3.x + p3.y*p1.x;
	if (op > 0) return 1;
	else if (op < 0) return -1;
	else return 0;
}
llinx(pii p1, pii p2, pii q1, pii q2) {
	int ab = ccw(p1, p2, q1) * ccw(p1, p2, q2);
	int cd = ccw(q1, q2, p1) * ccw(q1, q2, p2);
	if (ab == 0 || cd == 0) {
		if (p1 > p2) swap(p1, p2);
		if (q1 > q2) swap(q1, q2);
		return q1 <= p2 && p1 <= q2;
	}
	return ab <= 0 && cd <= 0;
}
plinx(pii p1, pii p2, pii pt) {
	return op(p2 - p1, pt - p1) == 0;
}